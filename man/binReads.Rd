% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binReads.R
\name{binReads}
\alias{binReads}
\title{Convert aligned reads from various file formats into read counts in
equidistant bins}
\usage{
binReads(reads, bins)
}
\arguments{
\item{bins}{A named \code{list} with \code{\link{GRanges-class}} containing
precalculated bins produced by \code{\link{fixedWidthBins}} or
\code{\link{variableWidthBins}}. Names must correspond to the binsize.}

\item{file}{A file with aligned reads. Alternatively a
\code{\link{GRanges-class}} with aligned reads.}

\item{ID}{An identifier that will be used to identify the file throughout
the workflow and in plotting.}

\item{outputfolder.binned}{Folder to which the binned data will be saved. If
the specified folder does not exist, it will be created.}

\item{binsizes}{An integer vector with bin sizes. If more than one value is
given, output files will be produced for each bin size.}

\item{stepsizes}{A vector of step sizes the same length as \code{binsizes}.
Only used for \code{method="HMM"}.}

\item{reads.per.bin}{Approximate number of desired reads per bin. The bin
size will be selected accordingly. Output files are produced for each value.}

\item{reads.per.step}{Approximate number of desired reads per step.}

\item{variable.width.reference}{A BAM file that is used as reference to
produce variable width bins. See \code{\link{variableWidthBins}} for
details.}

\item{chromosomes}{If only a subset of the chromosomes should be binned,
specify them here.}

\item{save.as.RData}{If set to \code{FALSE}, no output file will be written.
Instead, a \link{GenomicRanges} object containing the binned data will be
returned. Only the first binsize will be processed in this case.}

\item{calc.complexity}{A logical indicating whether or not to estimate
library complexity.}

\item{call}{The \code{match.call()} of the parent function.}

\item{reads.store}{If \code{TRUE} processed read fragments will be saved to
file. Reads are processed according to \code{min.mapq} and
\code{remove.duplicate.reads}. Paired end reads are coerced to single end
fragments. Will be ignored if \code{use.bamsignals=TRUE}.}

\item{outputfolder.reads}{Folder to which the read fragments will be saved.
If the specified folder does not exist, it will be created.}

\item{reads.return}{If \code{TRUE} no binning is done and instead, read
fragments from the input file are returned in \code{\link{GRanges-class}}
format.}

\item{reads.overwrite}{Whether or not an existing file with read fragments
should be overwritten.}

\item{reads.only}{If \code{TRUE} only read fragments are stored and/or
returned and no binning is done.}

\item{use.bamsignals}{If \code{TRUE} the \pkg{\link[bamsignals]{bamsignals}}
package will be used for binning. This gives a tremendous performance
increase for the binning step. \code{reads.store} and \code{calc.complexity}
will be set to \code{FALSE} in this case.}
}
\value{
The function produces a \code{list()} of \code{\link{GRanges-class}}
  or \code{\link{GRangesList}} objects with meta data columns 'counts',
  'mcounts', 'pcounts' that contain the total, minus and plus read count. This
  binned data will be either written to file (\code{save.as.RData=FALSE}) or
  given as return value (\code{save.as.RData=FALSE}).
}
\description{
Convert aligned reads in .bam or .bed(.gz) format into read counts in
equidistant windows.
}
\details{
Convert aligned reads from .bam or .bed(.gz) files into read counts in
equidistant windows (bins). This function uses
\code{GenomicRanges::countOverlaps} to calculate the read counts.
}
\examples{
## Get an example BED file with single-cell-sequencing reads
bedfile <- system.file("extdata", "KK150311_VI_07.bam.bed.gz", package="AneuFinderData")
## Bin the BED file into bin size 1Mb
binned <- binReads(bedfile, assembly='mm10', binsize=1e6,
                   chromosomes=c(1:19,'X','Y'))
print(binned)
}
\seealso{
binning
}
