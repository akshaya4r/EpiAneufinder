% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util.R
\name{match_call_defaults}
\alias{match_call_defaults}
\title{Argument matching with defaults}
\usage{
match_call_defaults(call = match.call(sys.function(sys.parent()),
  sys.call(sys.parent())),
  .formals = formals(sys.function(sys.parent())))
}
\arguments{
\item{call}{an unevaluated call to a function, as generated by
\code{\link{call}}}

\item{.formals}{the formal argument definition of \code{call}}
}
\value{
\code{match_call_defaults} returns a \code{call} corresponding to
the \code{call} argument, whose missing values have been filled in by the
defaults provided by \code{.formals}; the arguments are unevaluated.
}
\description{
\code{match_call_defaults} operates similar to \code{\link{match.call}}, but
considers also unset arguments for which defaults exist.
}
\details{
Both \code{call} and \code{.formals} have defaults which refer to the
function from which \code{match_call_defaults} was invoked. Thus, in normal
usage no arguments are specified.

The function is useful to forward a call to a different function, when most
arguments remain unchanged. See examples.
}
\examples{
paste_csv = function (..., sep = ',', collapse = NULL) {
    call = base$match_call_defaults()
    call[[1]] = quote(paste)
    eval.parent(call)
}

paste_csv('a', 'test') # => "a,test"
paste_csv('a', 'test', sep = ';') # => "a;test"
}
